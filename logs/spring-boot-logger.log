2021-08-09 02:15:45,755 WARN com.zaxxer.hikari.pool.HikariPool$HouseKeeper [HikariPool-1 housekeeper] HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=3h28s445ms882µs500ns).
2021-08-09 10:05:40,286 WARN com.zaxxer.hikari.pool.HikariPool$HouseKeeper [HikariPool-1 housekeeper] HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=7h50m5s711ms181µs500ns).
2021-08-09 10:05:49,199 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 10:14:13,704 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.0.Final
2021-08-09 10:14:13,709 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting AvtcApplication using Java 11.0.10 on DESKTOP-BIBH7GP with PID 18112 (C:\Users\sonna\IdeaProjects\avtc\target\classes started by sonna in C:\Users\sonna\IdeaProjects\avtc)
2021-08-09 10:14:13,713 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.5.0, Spring v5.3.7
2021-08-09 10:14:13,714 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2021-08-09 10:14:13,856 INFO org.springframework.boot.logging.DeferredLog [restartedMain] The Class-Path manifest attribute in C:\Users\sonna\.m2\repository\org\glassfish\hk2\hk2\2.6.1\hk2-2.6.1.jar referenced one or more files that do not exist: file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/hk2-utils.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/jakarta.annotation-api.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/jakarta.inject.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/hk2-api.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/aopalliance-repackaged.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/hk2-core.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/hk2-locator.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/javassist.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/hk2-runlevel.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/class-model.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/asm.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/asm-analysis.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/asm-commons.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/asm-tree.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/asm-util.jar
2021-08-09 10:14:13,856 INFO org.springframework.boot.logging.DeferredLog [restartedMain] The Class-Path manifest attribute in C:\Users\sonna\.m2\repository\io\grpc\grpc-netty-shaded\1.23.0\grpc-netty-shaded-1.23.0.jar referenced one or more files that do not exist: file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/grpc-core-1.23.0.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/grpc-api-1.23.0.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/gson-2.7.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/annotations-4.1.1.4.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/perfmark-api-0.17.0.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/opencensus-contrib-grpc-metrics-0.21.0.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/opencensus-api-0.21.0.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/grpc-context-1.23.0.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/error_prone_annotations-2.3.2.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/jsr305-3.0.2.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/animal-sniffer-annotations-1.17.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/guava-26.0-android.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/checker-compat-qual-2.5.2.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/j2objc-annotations-1.1.jar
2021-08-09 10:14:13,857 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-08-09 10:14:13,858 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-08-09 10:14:14,569 WARN org.springframework.core.log.CompositeLog [background-preinit] For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath
2021-08-09 10:14:16,366 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-08-09 10:14:16,725 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 334 ms. Found 12 JPA repository interfaces.
2021-08-09 10:14:17,845 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@45825eec' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-09 10:14:17,872 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-09 10:14:18,944 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8082 (http)
2021-08-09 10:14:19,018 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8082"]
2021-08-09 10:14:19,019 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2021-08-09 10:14:19,021 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.46]
2021-08-09 10:14:19,380 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2021-08-09 10:14:19,381 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 5521 ms
2021-08-09 10:14:20,048 DEBUG org.springframework.web.filter.GenericFilterBean [restartedMain] Filter 'securityFilter' configured for use
2021-08-09 10:14:20,503 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2021-08-09 10:14:20,753 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate Core {5.2.17.Final}
2021-08-09 10:14:20,759 INFO org.hibernate.cfg.Environment [restartedMain] HHH000206: hibernate.properties not found
2021-08-09 10:14:20,888 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [restartedMain] HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2021-08-09 10:14:21,374 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2021-08-09 10:14:29,432 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2021-08-09 10:14:29,503 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2021-08-09 10:14:32,535 WARN org.hibernate.tool.schema.internal.ExceptionHandlerLoggedImpl [restartedMain] GenerationTarget encountered exception accepting command : Error executing DDL via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:375)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:331)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:230)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:144)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:312)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:462)
	at io.hypersistence.optimizer.hibernate.decorator.Hibernate52SessionFactoryBuilderFactory$SessionFactoryDecoratorBuilder.build(Hibernate52SessionFactoryBuilderFactory.java:76)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:892)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:438)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:337)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1336)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1325)
	at org.heartfulness.avtc.AvtcApplication.main(AvtcApplication.java:26)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.sql.SQLSyntaxErrorException: Can't DROP 'FK5k690tkyct9bpjtavcmcyoeti'; check that column/key exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:762)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:646)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 41 common frames omitted
2021-08-09 10:14:34,481 INFO org.hibernate.tool.schema.internal.SchemaCreatorImpl [restartedMain] HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@45559280'
2021-08-09 10:14:34,496 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-08-09 10:14:36,628 INFO org.hibernate.hql.internal.QueryTranslatorFactoryInitiator [restartedMain] HHH000397: Using ASTQueryTranslatorFactory
2021-08-09 10:14:38,094 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] 
 _    _                           _     _
| |  | |                         (_)   | |
| |__| |_   _ _ __   ___ _ __ ___ _ ___| |_ ___ _ __   ___ ___
|  __  | | | | '_ \ / _ \ '__/ __| / __| __/ _ \ '_ \ / __/ _ \
| |  | | |_| | |_) |  __/ |  \__ \ \__ \ ||  __/ | | | (_|  __/
|_|  |_|\__, | .__/ \___|_|  |___/_|___/\__\___|_| |_|\___\___|
         __/ | |
        |___/|_|

           ____        _   _           _
          / __ \      | | (_)         (_)
         | |  | |_ __ | |_ _ _ __ ___  _ _______ _ __
         | |  | | '_ \| __| | '_ ` _ \| |_  / _ \ '__|
         | |__| | |_) | |_| | | | | | | |/ /  __/ |
          \____/| .__/ \__|_|_| |_| |_|_/___\___|_|
                | |
                |_|

2021-08-09 10:14:38,172 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - NullCollectionEvent - The [agents] collection in the [org.heartfulness.avtc.model.Team] entity is [null] by default. You should always initialize collections since an empty collection better indicates the absence of child elements, rather than a null collection reference. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#NullCollectionEvent
2021-08-09 10:14:38,192 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - NullCollectionEvent - The [timeSlots] collection in the [org.heartfulness.avtc.model.Team] entity is [null] by default. You should always initialize collections since an empty collection better indicates the absence of child elements, rather than a null collection reference. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#NullCollectionEvent
2021-08-09 10:14:38,205 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - IdentityGeneratorEvent - The [id] identifier attribute in the [org.heartfulness.avtc.model.Service] entity uses the [IdentityGenerator] strategy, which prevents Hibernate from enabling JDBC batch inserts. Since the database does not support the SEQUENCE identifier strategy, you need to use plain JDBC or some other data access framework to batch insert statements. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#IdentityGeneratorEvent
2021-08-09 10:14:38,210 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - NullCollectionEvent - The [departments] collection in the [org.heartfulness.avtc.model.Service] entity is [null] by default. You should always initialize collections since an empty collection better indicates the absence of child elements, rather than a null collection reference. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#NullCollectionEvent
2021-08-09 10:14:38,218 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - NullCollectionEvent - The [teams] collection in the [org.heartfulness.avtc.model.Service] entity is [null] by default. You should always initialize collections since an empty collection better indicates the absence of child elements, rather than a null collection reference. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#NullCollectionEvent
2021-08-09 10:14:38,224 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - IdentityGeneratorEvent - The [id] identifier attribute in the [org.heartfulness.avtc.model.TimeSlot] entity uses the [IdentityGenerator] strategy, which prevents Hibernate from enabling JDBC batch inserts. Since the database does not support the SEQUENCE identifier strategy, you need to use plain JDBC or some other data access framework to batch insert statements. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#IdentityGeneratorEvent
2021-08-09 10:14:38,232 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - NullCollectionEvent - The [scheduleExceptions] collection in the [org.heartfulness.avtc.model.TimeSlot] entity is [null] by default. You should always initialize collections since an empty collection better indicates the absence of child elements, rather than a null collection reference. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#NullCollectionEvent
2021-08-09 10:14:38,242 ERROR io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] CRITICAL - ManyToManyCascadeRemoveEvent - The [teams] many-to-many association in the [org.heartfulness.avtc.model.TimeSlot] entity cascades the REMOVE operation. Cascading the REMOVE operation is not needed since the other side is also a parent association. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#ManyToManyCascadeRemoveEvent
2021-08-09 10:14:38,243 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - NullCollectionEvent - The [teams] collection in the [org.heartfulness.avtc.model.TimeSlot] entity is [null] by default. You should always initialize collections since an empty collection better indicates the absence of child elements, rather than a null collection reference. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#NullCollectionEvent
2021-08-09 10:14:38,254 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - IdentityGeneratorEvent - The [id] identifier attribute in the [org.heartfulness.avtc.model.ScheduleException] entity uses the [IdentityGenerator] strategy, which prevents Hibernate from enabling JDBC batch inserts. Since the database does not support the SEQUENCE identifier strategy, you need to use plain JDBC or some other data access framework to batch insert statements. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#IdentityGeneratorEvent
2021-08-09 10:14:38,272 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - IdentityGeneratorEvent - The [id] identifier attribute in the [org.heartfulness.avtc.model.Schedule] entity uses the [IdentityGenerator] strategy, which prevents Hibernate from enabling JDBC batch inserts. Since the database does not support the SEQUENCE identifier strategy, you need to use plain JDBC or some other data access framework to batch insert statements. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#IdentityGeneratorEvent
2021-08-09 10:14:38,281 WARN io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MAJOR - LargeColumnEvent - The [endTime] attribute in the [org.heartfulness.avtc.model.Schedule] entity is mapped to a large column type. Consider using either compact types or moving the large columns to separate tables or using multiple entities mapped to the same database table so that you can choose which properties are to be fetched from the database based on the entity type. You should use the @Basic(fetch=LAZY) annotation and activate the bytecode enhancement lazy loading mechanism as, otherwise, the column is fetched eagerly when loading the entity. You should use the @DynamicUpdate annotation so that the UPDATE statement contains only the columns that have been modified by the currently running Persistence Context. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#LargeColumnEvent
2021-08-09 10:14:38,285 WARN io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MAJOR - LargeColumnEvent - The [startTime] attribute in the [org.heartfulness.avtc.model.Schedule] entity is mapped to a large column type. Consider using either compact types or moving the large columns to separate tables or using multiple entities mapped to the same database table so that you can choose which properties are to be fetched from the database based on the entity type. You should use the @Basic(fetch=LAZY) annotation and activate the bytecode enhancement lazy loading mechanism as, otherwise, the column is fetched eagerly when loading the entity. You should use the @DynamicUpdate annotation so that the UPDATE statement contains only the columns that have been modified by the currently running Persistence Context. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#LargeColumnEvent
2021-08-09 10:14:38,290 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - IdentityGeneratorEvent - The [id] identifier attribute in the [org.heartfulness.avtc.model.Logger] entity uses the [IdentityGenerator] strategy, which prevents Hibernate from enabling JDBC batch inserts. Since the database does not support the SEQUENCE identifier strategy, you need to use plain JDBC or some other data access framework to batch insert statements. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#IdentityGeneratorEvent
2021-08-09 10:14:38,305 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - IdentityGeneratorEvent - The [id] identifier attribute in the [org.heartfulness.avtc.model.Call] entity uses the [IdentityGenerator] strategy, which prevents Hibernate from enabling JDBC batch inserts. Since the database does not support the SEQUENCE identifier strategy, you need to use plain JDBC or some other data access framework to batch insert statements. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#IdentityGeneratorEvent
2021-08-09 10:14:38,338 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - NullCollectionEvent - The [leasing] collection in the [org.heartfulness.avtc.model.Call] entity is [null] by default. You should always initialize collections since an empty collection better indicates the absence of child elements, rather than a null collection reference. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#NullCollectionEvent
2021-08-09 10:14:38,364 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - IdentityGeneratorEvent - The [id] identifier attribute in the [org.heartfulness.avtc.model.Agent] entity uses the [IdentityGenerator] strategy, which prevents Hibernate from enabling JDBC batch inserts. Since the database does not support the SEQUENCE identifier strategy, you need to use plain JDBC or some other data access framework to batch insert statements. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#IdentityGeneratorEvent
2021-08-09 10:14:38,376 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - NullCollectionEvent - The [calls] collection in the [org.heartfulness.avtc.model.Agent] entity is [null] by default. You should always initialize collections since an empty collection better indicates the absence of child elements, rather than a null collection reference. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#NullCollectionEvent
2021-08-09 10:14:38,399 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - NullCollectionEvent - The [departments] collection in the [org.heartfulness.avtc.model.Agent] entity is [null] by default. You should always initialize collections since an empty collection better indicates the absence of child elements, rather than a null collection reference. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#NullCollectionEvent
2021-08-09 10:14:38,435 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - NullCollectionEvent - The [loggerSet] collection in the [org.heartfulness.avtc.model.Agent] entity is [null] by default. You should always initialize collections since an empty collection better indicates the absence of child elements, rather than a null collection reference. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#NullCollectionEvent
2021-08-09 10:14:38,468 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - NullCollectionEvent - The [scheduleExceptions] collection in the [org.heartfulness.avtc.model.Agent] entity is [null] by default. You should always initialize collections since an empty collection better indicates the absence of child elements, rather than a null collection reference. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#NullCollectionEvent
2021-08-09 10:14:38,474 ERROR io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] CRITICAL - BidirectionalSynchronizationEvent - The [schedules] bidirectional association in the [org.heartfulness.avtc.model.Agent] entity requires both ends to be synchronized. Only the [addSchedule(org.heartfulness.avtc.model.Schedule schedule)] could be found. Consider adding the [removeSchedule(org.heartfulness.avtc.model.Schedule schedule)]  synchronization method as well. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#BidirectionalSynchronizationEvent
2021-08-09 10:14:38,475 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - NullCollectionEvent - The [schedules] collection in the [org.heartfulness.avtc.model.Agent] entity is [null] by default. You should always initialize collections since an empty collection better indicates the absence of child elements, rather than a null collection reference. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#NullCollectionEvent
2021-08-09 10:14:38,496 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - NullCollectionEvent - The [teams] collection in the [org.heartfulness.avtc.model.Agent] entity is [null] by default. You should always initialize collections since an empty collection better indicates the absence of child elements, rather than a null collection reference. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#NullCollectionEvent
2021-08-09 10:14:38,511 ERROR io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] CRITICAL - OneToOneParentSideEvent - The [teamManaged] one-to-one association in the [class org.heartfulness.avtc.model.Agent] entity is mapped as the parent-side of this relationship. The parent-side of a one-to-one association is fetched eagerly unless bytecode enhancement lazy loading is enabled and the association is annotated with @LazyToOne(LazyToOneOption.NO_PROXY). For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#OneToOneParentSideEvent
2021-08-09 10:14:38,516 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - IdentityGeneratorEvent - The [id] identifier attribute in the [org.heartfulness.avtc.model.Department] entity uses the [IdentityGenerator] strategy, which prevents Hibernate from enabling JDBC batch inserts. Since the database does not support the SEQUENCE identifier strategy, you need to use plain JDBC or some other data access framework to batch insert statements. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#IdentityGeneratorEvent
2021-08-09 10:14:38,522 ERROR io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] CRITICAL - BidirectionalSynchronizationEvent - The [agents] bidirectional association in the [org.heartfulness.avtc.model.Department] entity requires both ends to be synchronized. Only the [addAgent(org.heartfulness.avtc.model.Agent agent)] could be found. Consider adding the [removeAgent(org.heartfulness.avtc.model.Agent agent)]  synchronization method as well. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#BidirectionalSynchronizationEvent
2021-08-09 10:14:38,523 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - NullCollectionEvent - The [agents] collection in the [org.heartfulness.avtc.model.Department] entity is [null] by default. You should always initialize collections since an empty collection better indicates the absence of child elements, rather than a null collection reference. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#NullCollectionEvent
2021-08-09 10:14:38,534 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - IdentityGeneratorEvent - The [id] identifier attribute in the [org.heartfulness.avtc.model.Language] entity uses the [IdentityGenerator] strategy, which prevents Hibernate from enabling JDBC batch inserts. Since the database does not support the SEQUENCE identifier strategy, you need to use plain JDBC or some other data access framework to batch insert statements. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#IdentityGeneratorEvent
2021-08-09 10:14:38,538 ERROR io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] CRITICAL - BidirectionalSynchronizationEvent - The [Departments] bidirectional association in the [org.heartfulness.avtc.model.Language] entity requires both ends to be synchronized. Consider adding the [addDepartment(org.heartfulness.avtc.model.Department department)] and [removeDepartment(org.heartfulness.avtc.model.Department department)] synchronization methods. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#BidirectionalSynchronizationEvent
2021-08-09 10:14:38,538 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - NullCollectionEvent - The [Departments] collection in the [org.heartfulness.avtc.model.Language] entity is [null] by default. You should always initialize collections since an empty collection better indicates the absence of child elements, rather than a null collection reference. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#NullCollectionEvent
2021-08-09 10:14:38,542 ERROR io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] CRITICAL - BidirectionalSynchronizationEvent - The [callers] bidirectional association in the [org.heartfulness.avtc.model.Language] entity requires both ends to be synchronized. Consider adding the [addCaller(org.heartfulness.avtc.model.Caller caller)] and [removeCaller(org.heartfulness.avtc.model.Caller caller)] synchronization methods. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#BidirectionalSynchronizationEvent
2021-08-09 10:14:38,543 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - NullCollectionEvent - The [callers] collection in the [org.heartfulness.avtc.model.Language] entity is [null] by default. You should always initialize collections since an empty collection better indicates the absence of child elements, rather than a null collection reference. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#NullCollectionEvent
2021-08-09 10:14:38,551 ERROR io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] CRITICAL - BidirectionalSynchronizationEvent - The [teams] bidirectional association in the [org.heartfulness.avtc.model.Language] entity requires both ends to be synchronized. Consider adding the [addTeam(org.heartfulness.avtc.model.Team team)] and [removeTeam(org.heartfulness.avtc.model.Team team)] synchronization methods. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#BidirectionalSynchronizationEvent
2021-08-09 10:14:38,551 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - NullCollectionEvent - The [teams] collection in the [org.heartfulness.avtc.model.Language] entity is [null] by default. You should always initialize collections since an empty collection better indicates the absence of child elements, rather than a null collection reference. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#NullCollectionEvent
2021-08-09 10:14:38,557 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - IdentityGeneratorEvent - The [id] identifier attribute in the [org.heartfulness.avtc.model.Caller] entity uses the [IdentityGenerator] strategy, which prevents Hibernate from enabling JDBC batch inserts. Since the database does not support the SEQUENCE identifier strategy, you need to use plain JDBC or some other data access framework to batch insert statements. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#IdentityGeneratorEvent
2021-08-09 10:14:38,565 WARN io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MAJOR - EnumTypeStringEvent - The [ageGroup] enum attribute in the [org.heartfulness.avtc.model.Caller] entity uses the EnumType.STRING strategy, which has a bigger memory footprint than EnumType.ORDINAL. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#EnumTypeStringEvent
2021-08-09 10:14:38,574 ERROR io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] CRITICAL - BidirectionalSynchronizationEvent - The [calls] bidirectional association in the [org.heartfulness.avtc.model.Caller] entity requires both ends to be synchronized. Only the [addCall(org.heartfulness.avtc.model.Call call)] could be found. Consider adding the [removeCall(org.heartfulness.avtc.model.Call call)]  synchronization method as well. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#BidirectionalSynchronizationEvent
2021-08-09 10:14:38,575 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - NullCollectionEvent - The [calls] collection in the [org.heartfulness.avtc.model.Caller] entity is [null] by default. You should always initialize collections since an empty collection better indicates the absence of child elements, rather than a null collection reference. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#NullCollectionEvent
2021-08-09 10:14:38,579 WARN io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MAJOR - EnumTypeStringEvent - The [category] enum attribute in the [org.heartfulness.avtc.model.Caller] entity uses the EnumType.STRING strategy, which has a bigger memory footprint than EnumType.ORDINAL. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#EnumTypeStringEvent
2021-08-09 10:14:38,623 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - NullCollectionEvent - The [languages] collection in the [org.heartfulness.avtc.model.Caller] entity is [null] by default. You should always initialize collections since an empty collection better indicates the absence of child elements, rather than a null collection reference. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#NullCollectionEvent
2021-08-09 10:14:38,694 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
2021-08-09 10:14:38,698 WARN io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MAJOR - DialectVersionEvent - Your application is using the [org.hibernate.dialect.MySQL55Dialect] Hibernate-specific Dialect. Consider using the [org.hibernate.dialect.MySQL57Dialect] instead, as it's closer to your current database server version [MySQL 5.7]. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#DialectVersionEvent
2021-08-09 10:14:38,702 WARN io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MAJOR - SkipAutoCommitCheckEvent - You should set the [hibernate.connection.provider_disables_autocommit] configuration property to [true] while also making sure that the underlying DataSource is configured to disable the auto-commit flag whenever a new Connection is being acquired. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#SkipAutoCommitCheckEvent
2021-08-09 10:14:38,742 ERROR io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] CRITICAL - JdbcBatchSizeEvent - If you set the [hibernate.jdbc.batch_size] configuration property to a value greater than 1 (usually between 5 and 30), Hibernate can then execute SQL statements in batches, therefore reducing the number of database network roundtrips. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#JdbcBatchSizeEvent
2021-08-09 10:14:38,749 ERROR io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] BLOCKER - SchemaGenerationEvent - You should not set the [hibernate.hbm2ddl.auto] configuration property to the value of [create], as Hibernate will then manage the database schema for you. Instead, you should use an incremental schema migration tool (e.g., Flyway, Liquibase), which allows you to use any database-specific DDL construct. By storing the migration scripts in the Version Control System along with the application source code, you will always remember why a certain schema change was done. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#SchemaGenerationEvent
2021-08-09 10:14:38,754 ERROR io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] CRITICAL - QueryPaginationCollectionFetchingEvent - You should set the [hibernate.query.fail_on_pagination_over_collection_fetch] configuration property to the value of [true], as Hibernate can then prevent in-memory pagination when join fetching a child entity collection. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#QueryPaginationCollectionFetchingEvent
2021-08-09 10:14:38,757 ERROR io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] CRITICAL - DefaultQueryPlanCacheMaxSizeEvent - You should set the [hibernate.query.plan_cache_max_size] configuration property to a value that allows you to hold all JPQL, Criteria API, or SQL queries executed with Hibernate. The default query plan cache size is [2048] and might not be enough for a non-trivial application. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#DefaultQueryPlanCacheMaxSizeEvent
2021-08-09 10:14:38,769 ERROR io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] CRITICAL - JdbcStatementCacheSizeEvent - The JDBC statement cache is disabled. You should consider enabling it, as follows. You should set the [cachePrepStmts] JDBC configuration property to the value of [true] and the [prepStmtCacheSize] property to the value of [256] . Consider lowering the statement cache size if you don't have enough memory and increasing it if you have plenty of memory and need to execute lots of distinct SQL statements. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#JdbcStatementCacheSizeEvent
2021-08-09 10:14:38,771 WARN io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] 48 issues were found: 1 BLOCKER, 12 CRITICAL, 6 MAJOR, 29 MINOR
2021-08-09 10:14:38,988 INFO org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration [restartedMain] 

Using generated security password: 13cb5d06-4336-4ccc-b0f0-3dacaee828b7

2021-08-09 10:14:39,664 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1534b3b9, org.springframework.security.web.context.SecurityContextPersistenceFilter@1af575d1, org.springframework.security.web.header.HeaderWriterFilter@2b8f141b, org.springframework.web.filter.CorsFilter@266a4f44, org.springframework.security.web.authentication.logout.LogoutFilter@47382101, org.heartfulness.avtc.security.auth.SecurityFilter@7c3a6196, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@40bc1b15, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@280cfc19, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2fba3013, org.springframework.security.web.session.SessionManagementFilter@f1db060, org.springframework.security.web.access.ExceptionTranslationFilter@634fbd6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@b9610b1]
2021-08-09 10:14:44,636 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2021-08-09 10:14:44,698 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8082"]
2021-08-09 10:14:44,750 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8082 (http) with context path ''
2021-08-09 10:14:44,784 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started AvtcApplication in 32.096 seconds (JVM running for 39.194)
2021-08-09 10:14:44,789 INFO org.springframework.boot.availability.ApplicationAvailabilityBean [restartedMain] Application availability state LivenessState changed to CORRECT
2021-08-09 10:14:44,795 INFO org.springframework.boot.availability.ApplicationAvailabilityBean [restartedMain] Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2021-08-09 10:14:44,992 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 10:15:16,924 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8082-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-08-09 10:15:16,925 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8082-exec-1] Initializing Servlet 'dispatcherServlet'
2021-08-09 10:15:16,928 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8082-exec-1] Completed initialization in 3 ms
2021-08-09 10:15:16,965 INFO org.heartfulness.avtc.security.auth.SecurityFilter [http-nio-8082-exec-1] null
2021-08-09 10:15:17,003 INFO org.heartfulness.avtc.security.auth.SecurityFilter [http-nio-8082-exec-2] null
2021-08-09 10:15:17,832 INFO org.heartfulness.avtc.security.auth.SecurityFilter [http-nio-8082-exec-3] null
2021-08-09 10:15:17,841 INFO org.heartfulness.avtc.security.auth.SecurityFilter [http-nio-8082-exec-4] null
2021-08-09 10:15:17,990 INFO org.heartfulness.avtc.security.auth.SecurityFilter [http-nio-8082-exec-5] null
2021-08-09 10:15:18,010 INFO org.heartfulness.avtc.security.auth.SecurityFilter [http-nio-8082-exec-6] null
2021-08-09 10:15:18,230 INFO org.heartfulness.avtc.security.auth.SecurityFilter [http-nio-8082-exec-7] null
2021-08-09 10:15:18,581 INFO org.heartfulness.avtc.security.auth.SecurityFilter [http-nio-8082-exec-8] null
2021-08-09 10:15:19,294 INFO org.heartfulness.avtc.security.auth.SecurityFilter [http-nio-8082-exec-9] null
2021-08-09 10:15:24,120 INFO org.heartfulness.avtc.security.auth.SecurityFilter [http-nio-8082-exec-10] null
2021-08-09 10:16:25,004 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 10:18:05,027 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 10:19:45,046 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 10:21:25,069 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 10:23:05,080 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 10:24:45,092 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 10:26:25,102 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 10:28:05,124 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 10:29:45,143 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 10:31:25,163 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 10:33:05,180 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 10:34:45,191 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 10:36:25,204 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 10:38:05,218 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 10:39:45,239 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 10:41:25,248 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 10:43:05,258 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 10:44:45,281 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 10:46:25,300 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 10:48:05,318 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 10:49:45,338 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 10:51:25,355 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 10:53:05,375 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 10:54:45,393 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 10:56:25,409 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 10:58:05,427 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 10:59:45,445 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 11:01:25,466 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 11:03:05,489 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 11:04:45,497 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 11:06:25,516 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 11:07:55,953 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.0.Final
2021-08-09 11:07:55,953 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting AvtcApplication using Java 11.0.10 on DESKTOP-BIBH7GP with PID 9644 (C:\Users\sonna\IdeaProjects\avtc\target\classes started by sonna in C:\Users\sonna\IdeaProjects\avtc)
2021-08-09 11:07:55,960 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.5.0, Spring v5.3.7
2021-08-09 11:07:55,962 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2021-08-09 11:07:56,050 INFO org.springframework.boot.logging.DeferredLog [restartedMain] The Class-Path manifest attribute in C:\Users\sonna\.m2\repository\org\glassfish\hk2\hk2\2.6.1\hk2-2.6.1.jar referenced one or more files that do not exist: file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/hk2-utils.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/jakarta.annotation-api.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/jakarta.inject.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/hk2-api.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/aopalliance-repackaged.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/hk2-core.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/hk2-locator.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/javassist.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/hk2-runlevel.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/class-model.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/asm.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/asm-analysis.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/asm-commons.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/asm-tree.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/asm-util.jar
2021-08-09 11:07:56,051 INFO org.springframework.boot.logging.DeferredLog [restartedMain] The Class-Path manifest attribute in C:\Users\sonna\.m2\repository\io\grpc\grpc-netty-shaded\1.23.0\grpc-netty-shaded-1.23.0.jar referenced one or more files that do not exist: file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/grpc-core-1.23.0.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/grpc-api-1.23.0.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/gson-2.7.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/annotations-4.1.1.4.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/perfmark-api-0.17.0.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/opencensus-contrib-grpc-metrics-0.21.0.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/opencensus-api-0.21.0.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/grpc-context-1.23.0.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/error_prone_annotations-2.3.2.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/jsr305-3.0.2.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/animal-sniffer-annotations-1.17.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/guava-26.0-android.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/checker-compat-qual-2.5.2.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/j2objc-annotations-1.1.jar
2021-08-09 11:07:56,052 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-08-09 11:07:56,052 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-08-09 11:07:56,575 WARN org.springframework.core.log.CompositeLog [background-preinit] For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath
2021-08-09 11:07:57,807 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-08-09 11:07:58,157 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 331 ms. Found 12 JPA repository interfaces.
2021-08-09 11:07:59,012 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2570f8e3' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-09 11:07:59,029 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-09 11:07:59,761 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8082 (http)
2021-08-09 11:07:59,780 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8082"]
2021-08-09 11:07:59,780 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2021-08-09 11:07:59,781 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.46]
2021-08-09 11:08:00,071 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2021-08-09 11:08:00,072 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 4017 ms
2021-08-09 11:08:00,545 DEBUG org.springframework.web.filter.GenericFilterBean [restartedMain] Filter 'securityFilter' configured for use
2021-08-09 11:08:00,900 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2021-08-09 11:08:01,088 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate Core {5.2.17.Final}
2021-08-09 11:08:01,093 INFO org.hibernate.cfg.Environment [restartedMain] HHH000206: hibernate.properties not found
2021-08-09 11:08:01,188 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [restartedMain] HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2021-08-09 11:08:01,515 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2021-08-09 11:08:02,329 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2021-08-09 11:08:02,368 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2021-08-09 11:08:06,242 INFO org.hibernate.tool.schema.internal.SchemaCreatorImpl [restartedMain] HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@147b2268'
2021-08-09 11:08:06,271 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-08-09 11:08:07,810 INFO org.hibernate.hql.internal.QueryTranslatorFactoryInitiator [restartedMain] HHH000397: Using ASTQueryTranslatorFactory
2021-08-09 11:08:08,813 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] 
 _    _                           _     _
| |  | |                         (_)   | |
| |__| |_   _ _ __   ___ _ __ ___ _ ___| |_ ___ _ __   ___ ___
|  __  | | | | '_ \ / _ \ '__/ __| / __| __/ _ \ '_ \ / __/ _ \
| |  | | |_| | |_) |  __/ |  \__ \ \__ \ ||  __/ | | | (_|  __/
|_|  |_|\__, | .__/ \___|_|  |___/_|___/\__\___|_| |_|\___\___|
         __/ | |
        |___/|_|

           ____        _   _           _
          / __ \      | | (_)         (_)
         | |  | |_ __ | |_ _ _ __ ___  _ _______ _ __
         | |  | | '_ \| __| | '_ ` _ \| |_  / _ \ '__|
         | |__| | |_) | |_| | | | | | | |/ /  __/ |
          \____/| .__/ \__|_|_| |_| |_|_/___\___|_|
                | |
                |_|

2021-08-09 11:08:08,897 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - NullCollectionEvent - The [agents] collection in the [org.heartfulness.avtc.model.Team] entity is [null] by default. You should always initialize collections since an empty collection better indicates the absence of child elements, rather than a null collection reference. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#NullCollectionEvent
2021-08-09 11:08:08,922 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - NullCollectionEvent - The [timeSlots] collection in the [org.heartfulness.avtc.model.Team] entity is [null] by default. You should always initialize collections since an empty collection better indicates the absence of child elements, rather than a null collection reference. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#NullCollectionEvent
2021-08-09 11:08:08,938 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - IdentityGeneratorEvent - The [id] identifier attribute in the [org.heartfulness.avtc.model.Service] entity uses the [IdentityGenerator] strategy, which prevents Hibernate from enabling JDBC batch inserts. Since the database does not support the SEQUENCE identifier strategy, you need to use plain JDBC or some other data access framework to batch insert statements. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#IdentityGeneratorEvent
2021-08-09 11:08:08,944 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - NullCollectionEvent - The [departments] collection in the [org.heartfulness.avtc.model.Service] entity is [null] by default. You should always initialize collections since an empty collection better indicates the absence of child elements, rather than a null collection reference. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#NullCollectionEvent
2021-08-09 11:08:08,953 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - NullCollectionEvent - The [teams] collection in the [org.heartfulness.avtc.model.Service] entity is [null] by default. You should always initialize collections since an empty collection better indicates the absence of child elements, rather than a null collection reference. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#NullCollectionEvent
2021-08-09 11:08:08,957 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - IdentityGeneratorEvent - The [id] identifier attribute in the [org.heartfulness.avtc.model.TimeSlot] entity uses the [IdentityGenerator] strategy, which prevents Hibernate from enabling JDBC batch inserts. Since the database does not support the SEQUENCE identifier strategy, you need to use plain JDBC or some other data access framework to batch insert statements. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#IdentityGeneratorEvent
2021-08-09 11:08:08,963 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - NullCollectionEvent - The [scheduleExceptions] collection in the [org.heartfulness.avtc.model.TimeSlot] entity is [null] by default. You should always initialize collections since an empty collection better indicates the absence of child elements, rather than a null collection reference. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#NullCollectionEvent
2021-08-09 11:08:08,970 ERROR io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] CRITICAL - ManyToManyCascadeRemoveEvent - The [teams] many-to-many association in the [org.heartfulness.avtc.model.TimeSlot] entity cascades the REMOVE operation. Cascading the REMOVE operation is not needed since the other side is also a parent association. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#ManyToManyCascadeRemoveEvent
2021-08-09 11:08:08,971 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - NullCollectionEvent - The [teams] collection in the [org.heartfulness.avtc.model.TimeSlot] entity is [null] by default. You should always initialize collections since an empty collection better indicates the absence of child elements, rather than a null collection reference. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#NullCollectionEvent
2021-08-09 11:08:08,980 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - IdentityGeneratorEvent - The [id] identifier attribute in the [org.heartfulness.avtc.model.ScheduleException] entity uses the [IdentityGenerator] strategy, which prevents Hibernate from enabling JDBC batch inserts. Since the database does not support the SEQUENCE identifier strategy, you need to use plain JDBC or some other data access framework to batch insert statements. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#IdentityGeneratorEvent
2021-08-09 11:08:08,993 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - IdentityGeneratorEvent - The [id] identifier attribute in the [org.heartfulness.avtc.model.Schedule] entity uses the [IdentityGenerator] strategy, which prevents Hibernate from enabling JDBC batch inserts. Since the database does not support the SEQUENCE identifier strategy, you need to use plain JDBC or some other data access framework to batch insert statements. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#IdentityGeneratorEvent
2021-08-09 11:08:08,999 WARN io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MAJOR - LargeColumnEvent - The [endTime] attribute in the [org.heartfulness.avtc.model.Schedule] entity is mapped to a large column type. Consider using either compact types or moving the large columns to separate tables or using multiple entities mapped to the same database table so that you can choose which properties are to be fetched from the database based on the entity type. You should use the @Basic(fetch=LAZY) annotation and activate the bytecode enhancement lazy loading mechanism as, otherwise, the column is fetched eagerly when loading the entity. You should use the @DynamicUpdate annotation so that the UPDATE statement contains only the columns that have been modified by the currently running Persistence Context. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#LargeColumnEvent
2021-08-09 11:08:09,001 WARN io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MAJOR - LargeColumnEvent - The [startTime] attribute in the [org.heartfulness.avtc.model.Schedule] entity is mapped to a large column type. Consider using either compact types or moving the large columns to separate tables or using multiple entities mapped to the same database table so that you can choose which properties are to be fetched from the database based on the entity type. You should use the @Basic(fetch=LAZY) annotation and activate the bytecode enhancement lazy loading mechanism as, otherwise, the column is fetched eagerly when loading the entity. You should use the @DynamicUpdate annotation so that the UPDATE statement contains only the columns that have been modified by the currently running Persistence Context. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#LargeColumnEvent
2021-08-09 11:08:09,005 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - IdentityGeneratorEvent - The [id] identifier attribute in the [org.heartfulness.avtc.model.Logger] entity uses the [IdentityGenerator] strategy, which prevents Hibernate from enabling JDBC batch inserts. Since the database does not support the SEQUENCE identifier strategy, you need to use plain JDBC or some other data access framework to batch insert statements. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#IdentityGeneratorEvent
2021-08-09 11:08:09,017 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - IdentityGeneratorEvent - The [id] identifier attribute in the [org.heartfulness.avtc.model.Call] entity uses the [IdentityGenerator] strategy, which prevents Hibernate from enabling JDBC batch inserts. Since the database does not support the SEQUENCE identifier strategy, you need to use plain JDBC or some other data access framework to batch insert statements. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#IdentityGeneratorEvent
2021-08-09 11:08:09,044 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - NullCollectionEvent - The [leasing] collection in the [org.heartfulness.avtc.model.Call] entity is [null] by default. You should always initialize collections since an empty collection better indicates the absence of child elements, rather than a null collection reference. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#NullCollectionEvent
2021-08-09 11:08:09,062 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - IdentityGeneratorEvent - The [id] identifier attribute in the [org.heartfulness.avtc.model.Agent] entity uses the [IdentityGenerator] strategy, which prevents Hibernate from enabling JDBC batch inserts. Since the database does not support the SEQUENCE identifier strategy, you need to use plain JDBC or some other data access framework to batch insert statements. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#IdentityGeneratorEvent
2021-08-09 11:08:09,069 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - NullCollectionEvent - The [calls] collection in the [org.heartfulness.avtc.model.Agent] entity is [null] by default. You should always initialize collections since an empty collection better indicates the absence of child elements, rather than a null collection reference. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#NullCollectionEvent
2021-08-09 11:08:09,085 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - NullCollectionEvent - The [departments] collection in the [org.heartfulness.avtc.model.Agent] entity is [null] by default. You should always initialize collections since an empty collection better indicates the absence of child elements, rather than a null collection reference. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#NullCollectionEvent
2021-08-09 11:08:09,110 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - NullCollectionEvent - The [loggerSet] collection in the [org.heartfulness.avtc.model.Agent] entity is [null] by default. You should always initialize collections since an empty collection better indicates the absence of child elements, rather than a null collection reference. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#NullCollectionEvent
2021-08-09 11:08:09,131 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - NullCollectionEvent - The [scheduleExceptions] collection in the [org.heartfulness.avtc.model.Agent] entity is [null] by default. You should always initialize collections since an empty collection better indicates the absence of child elements, rather than a null collection reference. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#NullCollectionEvent
2021-08-09 11:08:09,136 ERROR io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] CRITICAL - BidirectionalSynchronizationEvent - The [schedules] bidirectional association in the [org.heartfulness.avtc.model.Agent] entity requires both ends to be synchronized. Only the [addSchedule(org.heartfulness.avtc.model.Schedule schedule)] could be found. Consider adding the [removeSchedule(org.heartfulness.avtc.model.Schedule schedule)]  synchronization method as well. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#BidirectionalSynchronizationEvent
2021-08-09 11:08:09,136 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - NullCollectionEvent - The [schedules] collection in the [org.heartfulness.avtc.model.Agent] entity is [null] by default. You should always initialize collections since an empty collection better indicates the absence of child elements, rather than a null collection reference. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#NullCollectionEvent
2021-08-09 11:08:09,151 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - NullCollectionEvent - The [teams] collection in the [org.heartfulness.avtc.model.Agent] entity is [null] by default. You should always initialize collections since an empty collection better indicates the absence of child elements, rather than a null collection reference. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#NullCollectionEvent
2021-08-09 11:08:09,160 ERROR io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] CRITICAL - OneToOneParentSideEvent - The [teamManaged] one-to-one association in the [class org.heartfulness.avtc.model.Agent] entity is mapped as the parent-side of this relationship. The parent-side of a one-to-one association is fetched eagerly unless bytecode enhancement lazy loading is enabled and the association is annotated with @LazyToOne(LazyToOneOption.NO_PROXY). For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#OneToOneParentSideEvent
2021-08-09 11:08:09,164 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - IdentityGeneratorEvent - The [id] identifier attribute in the [org.heartfulness.avtc.model.Department] entity uses the [IdentityGenerator] strategy, which prevents Hibernate from enabling JDBC batch inserts. Since the database does not support the SEQUENCE identifier strategy, you need to use plain JDBC or some other data access framework to batch insert statements. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#IdentityGeneratorEvent
2021-08-09 11:08:09,167 ERROR io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] CRITICAL - BidirectionalSynchronizationEvent - The [agents] bidirectional association in the [org.heartfulness.avtc.model.Department] entity requires both ends to be synchronized. Only the [addAgent(org.heartfulness.avtc.model.Agent agent)] could be found. Consider adding the [removeAgent(org.heartfulness.avtc.model.Agent agent)]  synchronization method as well. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#BidirectionalSynchronizationEvent
2021-08-09 11:08:09,167 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - NullCollectionEvent - The [agents] collection in the [org.heartfulness.avtc.model.Department] entity is [null] by default. You should always initialize collections since an empty collection better indicates the absence of child elements, rather than a null collection reference. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#NullCollectionEvent
2021-08-09 11:08:09,175 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - IdentityGeneratorEvent - The [id] identifier attribute in the [org.heartfulness.avtc.model.Language] entity uses the [IdentityGenerator] strategy, which prevents Hibernate from enabling JDBC batch inserts. Since the database does not support the SEQUENCE identifier strategy, you need to use plain JDBC or some other data access framework to batch insert statements. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#IdentityGeneratorEvent
2021-08-09 11:08:09,177 ERROR io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] CRITICAL - BidirectionalSynchronizationEvent - The [Departments] bidirectional association in the [org.heartfulness.avtc.model.Language] entity requires both ends to be synchronized. Consider adding the [addDepartment(org.heartfulness.avtc.model.Department department)] and [removeDepartment(org.heartfulness.avtc.model.Department department)] synchronization methods. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#BidirectionalSynchronizationEvent
2021-08-09 11:08:09,178 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - NullCollectionEvent - The [Departments] collection in the [org.heartfulness.avtc.model.Language] entity is [null] by default. You should always initialize collections since an empty collection better indicates the absence of child elements, rather than a null collection reference. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#NullCollectionEvent
2021-08-09 11:08:09,180 ERROR io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] CRITICAL - BidirectionalSynchronizationEvent - The [callers] bidirectional association in the [org.heartfulness.avtc.model.Language] entity requires both ends to be synchronized. Consider adding the [addCaller(org.heartfulness.avtc.model.Caller caller)] and [removeCaller(org.heartfulness.avtc.model.Caller caller)] synchronization methods. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#BidirectionalSynchronizationEvent
2021-08-09 11:08:09,180 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - NullCollectionEvent - The [callers] collection in the [org.heartfulness.avtc.model.Language] entity is [null] by default. You should always initialize collections since an empty collection better indicates the absence of child elements, rather than a null collection reference. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#NullCollectionEvent
2021-08-09 11:08:09,185 ERROR io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] CRITICAL - BidirectionalSynchronizationEvent - The [teams] bidirectional association in the [org.heartfulness.avtc.model.Language] entity requires both ends to be synchronized. Consider adding the [addTeam(org.heartfulness.avtc.model.Team team)] and [removeTeam(org.heartfulness.avtc.model.Team team)] synchronization methods. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#BidirectionalSynchronizationEvent
2021-08-09 11:08:09,186 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - NullCollectionEvent - The [teams] collection in the [org.heartfulness.avtc.model.Language] entity is [null] by default. You should always initialize collections since an empty collection better indicates the absence of child elements, rather than a null collection reference. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#NullCollectionEvent
2021-08-09 11:08:09,189 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - IdentityGeneratorEvent - The [id] identifier attribute in the [org.heartfulness.avtc.model.Caller] entity uses the [IdentityGenerator] strategy, which prevents Hibernate from enabling JDBC batch inserts. Since the database does not support the SEQUENCE identifier strategy, you need to use plain JDBC or some other data access framework to batch insert statements. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#IdentityGeneratorEvent
2021-08-09 11:08:09,194 WARN io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MAJOR - EnumTypeStringEvent - The [ageGroup] enum attribute in the [org.heartfulness.avtc.model.Caller] entity uses the EnumType.STRING strategy, which has a bigger memory footprint than EnumType.ORDINAL. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#EnumTypeStringEvent
2021-08-09 11:08:09,201 ERROR io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] CRITICAL - BidirectionalSynchronizationEvent - The [calls] bidirectional association in the [org.heartfulness.avtc.model.Caller] entity requires both ends to be synchronized. Only the [addCall(org.heartfulness.avtc.model.Call call)] could be found. Consider adding the [removeCall(org.heartfulness.avtc.model.Call call)]  synchronization method as well. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#BidirectionalSynchronizationEvent
2021-08-09 11:08:09,201 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - NullCollectionEvent - The [calls] collection in the [org.heartfulness.avtc.model.Caller] entity is [null] by default. You should always initialize collections since an empty collection better indicates the absence of child elements, rather than a null collection reference. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#NullCollectionEvent
2021-08-09 11:08:09,204 WARN io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MAJOR - EnumTypeStringEvent - The [category] enum attribute in the [org.heartfulness.avtc.model.Caller] entity uses the EnumType.STRING strategy, which has a bigger memory footprint than EnumType.ORDINAL. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#EnumTypeStringEvent
2021-08-09 11:08:09,244 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MINOR - NullCollectionEvent - The [languages] collection in the [org.heartfulness.avtc.model.Caller] entity is [null] by default. You should always initialize collections since an empty collection better indicates the absence of child elements, rather than a null collection reference. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#NullCollectionEvent
2021-08-09 11:08:09,315 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
2021-08-09 11:08:09,321 WARN io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MAJOR - DialectVersionEvent - Your application is using the [org.hibernate.dialect.MySQL55Dialect] Hibernate-specific Dialect. Consider using the [org.hibernate.dialect.MySQL57Dialect] instead, as it's closer to your current database server version [MySQL 5.7]. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#DialectVersionEvent
2021-08-09 11:08:09,326 WARN io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] MAJOR - SkipAutoCommitCheckEvent - You should set the [hibernate.connection.provider_disables_autocommit] configuration property to [true] while also making sure that the underlying DataSource is configured to disable the auto-commit flag whenever a new Connection is being acquired. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#SkipAutoCommitCheckEvent
2021-08-09 11:08:09,341 ERROR io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] CRITICAL - JdbcBatchSizeEvent - If you set the [hibernate.jdbc.batch_size] configuration property to a value greater than 1 (usually between 5 and 30), Hibernate can then execute SQL statements in batches, therefore reducing the number of database network roundtrips. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#JdbcBatchSizeEvent
2021-08-09 11:08:09,351 ERROR io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] BLOCKER - SchemaGenerationEvent - You should not set the [hibernate.hbm2ddl.auto] configuration property to the value of [create], as Hibernate will then manage the database schema for you. Instead, you should use an incremental schema migration tool (e.g., Flyway, Liquibase), which allows you to use any database-specific DDL construct. By storing the migration scripts in the Version Control System along with the application source code, you will always remember why a certain schema change was done. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#SchemaGenerationEvent
2021-08-09 11:08:09,358 ERROR io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] CRITICAL - QueryPaginationCollectionFetchingEvent - You should set the [hibernate.query.fail_on_pagination_over_collection_fetch] configuration property to the value of [true], as Hibernate can then prevent in-memory pagination when join fetching a child entity collection. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#QueryPaginationCollectionFetchingEvent
2021-08-09 11:08:09,361 ERROR io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] CRITICAL - DefaultQueryPlanCacheMaxSizeEvent - You should set the [hibernate.query.plan_cache_max_size] configuration property to a value that allows you to hold all JPQL, Criteria API, or SQL queries executed with Hibernate. The default query plan cache size is [2048] and might not be enough for a non-trivial application. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#DefaultQueryPlanCacheMaxSizeEvent
2021-08-09 11:08:09,374 ERROR io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] CRITICAL - JdbcStatementCacheSizeEvent - The JDBC statement cache is disabled. You should consider enabling it, as follows. You should set the [cachePrepStmts] JDBC configuration property to the value of [true] and the [prepStmtCacheSize] property to the value of [256] . Consider lowering the statement cache size if you don't have enough memory and increasing it if you have plenty of memory and need to execute lots of distinct SQL statements. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#JdbcStatementCacheSizeEvent
2021-08-09 11:08:09,377 WARN io.hypersistence.optimizer.util.logger.Slf4jLogger [restartedMain] 48 issues were found: 1 BLOCKER, 12 CRITICAL, 6 MAJOR, 29 MINOR
2021-08-09 11:08:09,565 INFO org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration [restartedMain] 

Using generated security password: b048c5fb-febe-4c92-b8c6-1541da7ffa3c

2021-08-09 11:08:10,049 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@194d5a39, org.springframework.security.web.context.SecurityContextPersistenceFilter@26ccb91, org.springframework.security.web.header.HeaderWriterFilter@935c02, org.springframework.web.filter.CorsFilter@3a1134dd, org.springframework.security.web.authentication.logout.LogoutFilter@4e956437, org.heartfulness.avtc.security.auth.SecurityFilter@30bf8a4c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@56b0af1a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@11a48b0a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6194a0b0, org.springframework.security.web.session.SessionManagementFilter@3511a3fa, org.springframework.security.web.access.ExceptionTranslationFilter@64cd9951, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2338cc1b]
2021-08-09 11:08:12,932 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2021-08-09 11:08:12,982 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8082"]
2021-08-09 11:08:13,024 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8082 (http) with context path ''
2021-08-09 11:08:13,049 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started AvtcApplication in 17.799 seconds (JVM running for 21.726)
2021-08-09 11:08:13,052 INFO org.springframework.boot.availability.ApplicationAvailabilityBean [restartedMain] Application availability state LivenessState changed to CORRECT
2021-08-09 11:08:13,057 INFO org.springframework.boot.availability.ApplicationAvailabilityBean [restartedMain] Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2021-08-09 11:08:13,194 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 11:09:53,217 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 11:11:33,235 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 11:13:13,256 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 11:14:53,284 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 11:16:33,296 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 11:18:13,305 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 11:19:53,324 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 11:21:33,346 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 11:23:13,355 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 11:24:53,365 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 11:26:33,377 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 11:28:01,011 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8082-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-08-09 11:28:01,012 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8082-exec-1] Initializing Servlet 'dispatcherServlet'
2021-08-09 11:28:01,015 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8082-exec-1] Completed initialization in 3 ms
2021-08-09 11:28:01,062 INFO org.heartfulness.avtc.security.auth.SecurityFilter [http-nio-8082-exec-1] null
2021-08-09 11:28:01,361 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [http-nio-8082-exec-1] MINOR - EntityAlreadyManagedEvent - The [org.heartfulness.avtc.model.Caller] entity with the identifier value of [1] is already managed by the Hibernate Session, so you don't need to call [merge] for it. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#EntityAlreadyManagedEvent
2021-08-09 11:28:01,401 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [http-nio-8082-exec-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 11:28:11,681 INFO org.heartfulness.avtc.security.auth.SecurityFilter [http-nio-8082-exec-3] null
2021-08-09 11:28:11,904 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8082-exec-3] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.orm.jpa.JpaSystemException: Null value was assigned to a property [class org.heartfulness.avtc.model.Agent.gender] of primitive type setter of org.heartfulness.avtc.model.Agent.gender; nested exception is org.hibernate.PropertyAccessException: Null value was assigned to a property [class org.heartfulness.avtc.model.Agent.gender] of primitive type setter of org.heartfulness.avtc.model.Agent.gender] with root cause
java.lang.IllegalArgumentException: Can not set char field org.heartfulness.avtc.model.Agent.gender to null value
	at java.base/jdk.internal.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:167)
	at java.base/jdk.internal.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:171)
	at java.base/jdk.internal.reflect.UnsafeCharacterFieldAccessorImpl.set(UnsafeCharacterFieldAccessorImpl.java:80)
	at java.base/java.lang.reflect.Field.set(Field.java:780)
	at org.hibernate.property.access.spi.SetterFieldImpl.set(SetterFieldImpl.java:41)
	at org.hibernate.tuple.entity.AbstractEntityTuplizer.setPropertyValues(AbstractEntityTuplizer.java:649)
	at org.hibernate.tuple.entity.PojoEntityTuplizer.setPropertyValues(PojoEntityTuplizer.java:205)
	at org.hibernate.persister.entity.AbstractEntityPersister.setPropertyValues(AbstractEntityPersister.java:4745)
	at org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:189)
	at org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:128)
	at org.hibernate.loader.Loader.initializeEntitiesAndCollections(Loader.java:1152)
	at org.hibernate.loader.Loader.processResultSet(Loader.java:1011)
	at org.hibernate.loader.Loader.doQuery(Loader.java:949)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:341)
	at org.hibernate.loader.Loader.doList(Loader.java:2692)
	at org.hibernate.loader.Loader.doList(Loader.java:2675)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2507)
	at org.hibernate.loader.Loader.list(Loader.java:2502)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:335)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2200)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1016)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:152)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1414)
	at org.hibernate.query.Query.getResultList(Query.java:146)
	at io.hypersistence.optimizer.hibernate.decorator.AbstractHibernate52SessionFactoryDecorator$SessionDecorator$NativeQueryDecorator.getResultList(AbstractHibernate52SessionFactoryDecorator.java:1114)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:126)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:155)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:143)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:159)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy119.findAgentsByDepartmentID(Unknown Source)
	at org.heartfulness.avtc.service.AgentServiceImpl.findAgentsByDepartmentAndStatus(AgentServiceImpl.java:75)
	at org.heartfulness.avtc.service.InputNodeService.getEligibleAgents(InputNodeService.java:156)
	at org.heartfulness.avtc.service.InputNodeService.input(InputNodeService.java:79)
	at org.heartfulness.avtc.controller.NodeController.inputNodeRequest(NodeController.java:36)
	at org.heartfulness.avtc.controller.NodeController$$FastClassBySpringCGLIB$$7244677c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at org.heartfulness.avtc.controller.NodeController$$EnhancerBySpringCGLIB$$1bff78d9.inputNodeRequest(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.heartfulness.avtc.security.auth.SecurityFilter.doFilterInternal(SecurityFilter.java:58)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-08-09 11:28:13,393 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 11:28:26,224 INFO org.heartfulness.avtc.security.auth.SecurityFilter [http-nio-8082-exec-5] null
2021-08-09 11:28:26,252 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8082-exec-5] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.orm.jpa.JpaSystemException: Null value was assigned to a property [class org.heartfulness.avtc.model.Agent.level] of primitive type setter of org.heartfulness.avtc.model.Agent.level; nested exception is org.hibernate.PropertyAccessException: Null value was assigned to a property [class org.heartfulness.avtc.model.Agent.level] of primitive type setter of org.heartfulness.avtc.model.Agent.level] with root cause
java.lang.IllegalArgumentException: Can not set int field org.heartfulness.avtc.model.Agent.level to null value
	at java.base/jdk.internal.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:167)
	at java.base/jdk.internal.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:171)
	at java.base/jdk.internal.reflect.UnsafeIntegerFieldAccessorImpl.set(UnsafeIntegerFieldAccessorImpl.java:80)
	at java.base/java.lang.reflect.Field.set(Field.java:780)
	at org.hibernate.property.access.spi.SetterFieldImpl.set(SetterFieldImpl.java:41)
	at org.hibernate.tuple.entity.AbstractEntityTuplizer.setPropertyValues(AbstractEntityTuplizer.java:649)
	at org.hibernate.tuple.entity.PojoEntityTuplizer.setPropertyValues(PojoEntityTuplizer.java:205)
	at org.hibernate.persister.entity.AbstractEntityPersister.setPropertyValues(AbstractEntityPersister.java:4745)
	at org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:189)
	at org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:128)
	at org.hibernate.loader.Loader.initializeEntitiesAndCollections(Loader.java:1152)
	at org.hibernate.loader.Loader.processResultSet(Loader.java:1011)
	at org.hibernate.loader.Loader.doQuery(Loader.java:949)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:341)
	at org.hibernate.loader.Loader.doList(Loader.java:2692)
	at org.hibernate.loader.Loader.doList(Loader.java:2675)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2507)
	at org.hibernate.loader.Loader.list(Loader.java:2502)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:335)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2200)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1016)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:152)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1414)
	at org.hibernate.query.Query.getResultList(Query.java:146)
	at io.hypersistence.optimizer.hibernate.decorator.AbstractHibernate52SessionFactoryDecorator$SessionDecorator$NativeQueryDecorator.getResultList(AbstractHibernate52SessionFactoryDecorator.java:1114)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:126)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:155)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:143)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:159)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy119.findAgentsByDepartmentID(Unknown Source)
	at org.heartfulness.avtc.service.AgentServiceImpl.findAgentsByDepartmentAndStatus(AgentServiceImpl.java:75)
	at org.heartfulness.avtc.service.InputNodeService.getEligibleAgents(InputNodeService.java:156)
	at org.heartfulness.avtc.service.InputNodeService.input(InputNodeService.java:79)
	at org.heartfulness.avtc.controller.NodeController.inputNodeRequest(NodeController.java:36)
	at org.heartfulness.avtc.controller.NodeController$$FastClassBySpringCGLIB$$7244677c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at org.heartfulness.avtc.controller.NodeController$$EnhancerBySpringCGLIB$$1bff78d9.inputNodeRequest(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.heartfulness.avtc.security.auth.SecurityFilter.doFilterInternal(SecurityFilter.java:58)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-08-09 11:28:37,348 INFO org.heartfulness.avtc.security.auth.SecurityFilter [http-nio-8082-exec-7] null
2021-08-09 11:28:37,389 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [http-nio-8082-exec-7] MINOR - EntityAlreadyManagedEvent - The [org.heartfulness.avtc.model.Agent] entity with the identifier value of [1] is already managed by the Hibernate Session, so you don't need to call [merge] for it. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#EntityAlreadyManagedEvent
2021-08-09 11:28:37,403 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [http-nio-8082-exec-7] MINOR - EntityAlreadyManagedEvent - The [org.heartfulness.avtc.model.Call] entity with the identifier value of [1] is already managed by the Hibernate Session, so you don't need to call [merge] for it. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#EntityAlreadyManagedEvent
2021-08-09 11:28:37,420 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [http-nio-8082-exec-7] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 11:29:53,410 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 11:31:33,435 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 11:33:13,453 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 11:34:53,477 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 11:36:33,490 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 11:38:13,513 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 11:39:53,533 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 11:41:33,549 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 11:43:13,573 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 11:44:53,586 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 11:46:33,605 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 11:48:13,623 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 11:49:53,639 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 11:51:33,665 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 11:53:13,678 INFO io.hypersistence.optimizer.util.logger.Slf4jLogger [scheduling-1] MINOR - AutoCommittingConnectionEvent - The JDBC Connection was borrowed in auto-commit mode, and Hibernate needs to disable this mode when starting a transaction, and re-enable it prior to releasing the JDBC Connection back to the pool. For more info about this event, check out this User Guide link - https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#AutoCommittingConnectionEvent
2021-08-09 11:55:03,844 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting AvtcApplication using Java 11.0.10 on DESKTOP-BIBH7GP with PID 13668 (C:\Users\sonna\IdeaProjects\avtc\target\classes started by sonna in C:\Users\sonna\IdeaProjects\avtc)
2021-08-09 11:55:03,858 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.5.0, Spring v5.3.7
2021-08-09 11:55:03,859 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2021-08-09 11:55:03,841 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.0.Final
2021-08-09 11:55:03,993 INFO org.springframework.boot.logging.DeferredLog [restartedMain] The Class-Path manifest attribute in C:\Users\sonna\.m2\repository\org\glassfish\hk2\hk2\2.6.1\hk2-2.6.1.jar referenced one or more files that do not exist: file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/hk2-utils.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/jakarta.annotation-api.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/jakarta.inject.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/hk2-api.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/aopalliance-repackaged.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/hk2-core.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/hk2-locator.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/javassist.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/hk2-runlevel.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/class-model.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/asm.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/asm-analysis.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/asm-commons.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/asm-tree.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/asm-util.jar
2021-08-09 11:55:03,994 INFO org.springframework.boot.logging.DeferredLog [restartedMain] The Class-Path manifest attribute in C:\Users\sonna\.m2\repository\io\grpc\grpc-netty-shaded\1.23.0\grpc-netty-shaded-1.23.0.jar referenced one or more files that do not exist: file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/grpc-core-1.23.0.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/grpc-api-1.23.0.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/gson-2.7.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/annotations-4.1.1.4.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/perfmark-api-0.17.0.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/opencensus-contrib-grpc-metrics-0.21.0.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/opencensus-api-0.21.0.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/grpc-context-1.23.0.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/error_prone_annotations-2.3.2.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/jsr305-3.0.2.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/animal-sniffer-annotations-1.17.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/guava-26.0-android.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/checker-compat-qual-2.5.2.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/j2objc-annotations-1.1.jar
2021-08-09 11:55:03,995 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-08-09 11:55:03,996 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-08-09 11:55:04,582 WARN org.springframework.core.log.CompositeLog [background-preinit] For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath
2021-08-09 11:55:06,374 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-08-09 11:55:06,747 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 348 ms. Found 12 JPA repository interfaces.
2021-08-09 11:55:07,654 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@163b68f0' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-09 11:55:07,669 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-09 11:55:08,365 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8082 (http)
2021-08-09 11:55:08,381 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8082"]
2021-08-09 11:55:08,382 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2021-08-09 11:55:08,383 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.46]
2021-08-09 11:55:08,674 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2021-08-09 11:55:08,675 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 4677 ms
2021-08-09 11:55:09,122 DEBUG org.springframework.web.filter.GenericFilterBean [restartedMain] Filter 'securityFilter' configured for use
2021-08-09 11:55:09,469 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2021-08-09 11:55:09,616 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate Core {5.2.17.Final}
2021-08-09 11:55:09,620 INFO org.hibernate.cfg.Environment [restartedMain] HHH000206: hibernate.properties not found
2021-08-09 11:55:09,709 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [restartedMain] HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2021-08-09 11:55:10,016 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2021-08-09 11:55:10,591 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2021-08-09 11:55:10,615 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2021-08-09 11:55:12,540 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-08-09 11:55:14,108 INFO org.hibernate.hql.internal.QueryTranslatorFactoryInitiator [restartedMain] HHH000397: Using ASTQueryTranslatorFactory
2021-08-09 11:55:15,114 INFO org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration [restartedMain] 

Using generated security password: 77adb4c9-7352-4dd8-83a9-59bbbdde8e59

2021-08-09 11:55:15,562 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6e1170cf, org.springframework.security.web.context.SecurityContextPersistenceFilter@5a8f07ea, org.springframework.security.web.header.HeaderWriterFilter@4c1287e5, org.springframework.web.filter.CorsFilter@65bb466c, org.springframework.security.web.authentication.logout.LogoutFilter@58bc42d5, org.heartfulness.avtc.security.auth.SecurityFilter@30a92987, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7530bdfa, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@ee9a3e5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2440be5a, org.springframework.security.web.session.SessionManagementFilter@ae88094, org.springframework.security.web.access.ExceptionTranslationFilter@7f102aba, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@327d9d15]
2021-08-09 11:55:18,418 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2021-08-09 11:55:18,472 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8082"]
2021-08-09 11:55:18,510 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8082 (http) with context path ''
2021-08-09 11:55:18,535 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started AvtcApplication in 15.391 seconds (JVM running for 18.827)
2021-08-09 11:55:18,538 INFO org.springframework.boot.availability.ApplicationAvailabilityBean [restartedMain] Application availability state LivenessState changed to CORRECT
2021-08-09 11:55:18,546 INFO org.springframework.boot.availability.ApplicationAvailabilityBean [restartedMain] Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2021-08-09 11:56:01,718 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8082-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-08-09 11:56:01,718 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8082-exec-1] Initializing Servlet 'dispatcherServlet'
2021-08-09 11:56:01,720 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8082-exec-1] Completed initialization in 2 ms
2021-08-09 11:56:01,765 INFO org.heartfulness.avtc.security.auth.SecurityFilter [http-nio-8082-exec-1] null
2021-08-09 11:56:08,129 INFO org.heartfulness.avtc.security.auth.SecurityFilter [http-nio-8082-exec-2] null
2021-08-09 11:56:08,205 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8082-exec-2] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at org.heartfulness.avtc.controller.MainController.createSessionCookie(MainController.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.heartfulness.avtc.security.auth.SecurityFilter.doFilterInternal(SecurityFilter.java:58)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-08-09 11:56:12,669 INFO org.heartfulness.avtc.security.auth.SecurityFilter [http-nio-8082-exec-3] null
2021-08-09 11:56:12,678 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8082-exec-3] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at org.heartfulness.avtc.controller.MainController.createSessionCookie(MainController.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.heartfulness.avtc.security.auth.SecurityFilter.doFilterInternal(SecurityFilter.java:58)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-08-09 11:56:19,774 INFO org.heartfulness.avtc.security.auth.SecurityFilter [http-nio-8082-exec-4] null
2021-08-09 11:56:19,782 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8082-exec-4] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at org.heartfulness.avtc.controller.MainController.createSessionCookie(MainController.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.heartfulness.avtc.security.auth.SecurityFilter.doFilterInternal(SecurityFilter.java:58)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-08-09 11:56:19,946 INFO org.heartfulness.avtc.security.auth.SecurityFilter [http-nio-8082-exec-5] null
2021-08-09 11:56:19,954 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8082-exec-5] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at org.heartfulness.avtc.controller.MainController.createSessionCookie(MainController.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.heartfulness.avtc.security.auth.SecurityFilter.doFilterInternal(SecurityFilter.java:58)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-08-09 11:56:20,078 INFO org.heartfulness.avtc.security.auth.SecurityFilter [http-nio-8082-exec-6] null
2021-08-09 11:56:20,087 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8082-exec-6] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at org.heartfulness.avtc.controller.MainController.createSessionCookie(MainController.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.heartfulness.avtc.security.auth.SecurityFilter.doFilterInternal(SecurityFilter.java:58)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-08-09 11:56:20,229 INFO org.heartfulness.avtc.security.auth.SecurityFilter [http-nio-8082-exec-7] null
2021-08-09 11:56:20,237 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8082-exec-7] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at org.heartfulness.avtc.controller.MainController.createSessionCookie(MainController.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.heartfulness.avtc.security.auth.SecurityFilter.doFilterInternal(SecurityFilter.java:58)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-08-09 11:56:20,363 INFO org.heartfulness.avtc.security.auth.SecurityFilter [http-nio-8082-exec-8] null
2021-08-09 11:56:20,373 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8082-exec-8] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at org.heartfulness.avtc.controller.MainController.createSessionCookie(MainController.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.heartfulness.avtc.security.auth.SecurityFilter.doFilterInternal(SecurityFilter.java:58)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-08-09 11:56:23,208 INFO org.heartfulness.avtc.security.auth.SecurityFilter [http-nio-8082-exec-9] null
2021-08-09 11:56:48,432 INFO org.heartfulness.avtc.security.auth.SecurityFilter [http-nio-8082-exec-10] null
2021-08-09 11:57:00,092 INFO org.heartfulness.avtc.security.auth.SecurityFilter [http-nio-8082-exec-1] null
2021-08-09 11:57:07,741 INFO org.heartfulness.avtc.security.auth.SecurityFilter [http-nio-8082-exec-2] null
2021-08-09 11:57:08,334 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8082-exec-2] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at org.heartfulness.avtc.model.Agent.validate(Agent.java:285)
	at org.heartfulness.avtc.controller.MainController.postMain(MainController.java:73)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.heartfulness.avtc.security.auth.SecurityFilter.doFilterInternal(SecurityFilter.java:58)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-08-09 11:57:42,807 INFO org.heartfulness.avtc.security.auth.SecurityFilter [http-nio-8082-exec-3] null
2021-08-09 11:57:42,863 INFO org.heartfulness.avtc.security.auth.SecurityFilter [http-nio-8082-exec-4] null
2021-08-09 11:57:42,900 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8082-exec-4] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at org.heartfulness.avtc.controller.AgentController.loggedInAgent(AgentController.java:66)
	at org.heartfulness.avtc.controller.AgentController$$FastClassBySpringCGLIB$$82313403.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at org.heartfulness.avtc.controller.AgentController$$EnhancerBySpringCGLIB$$ca905803.loggedInAgent(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.method.annotation.ModelFactory.invokeModelAttributeMethods(ModelFactory.java:143)
	at org.springframework.web.method.annotation.ModelFactory.initModel(ModelFactory.java:112)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:871)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.heartfulness.avtc.security.auth.SecurityFilter.doFilterInternal(SecurityFilter.java:58)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-08-09 11:58:09,167 INFO org.heartfulness.avtc.security.auth.SecurityFilter [http-nio-8082-exec-5] null
2021-08-09 11:58:09,948 INFO org.heartfulness.avtc.security.auth.SecurityFilter [http-nio-8082-exec-6] null
2021-08-09 11:58:10,255 INFO org.heartfulness.avtc.security.auth.SecurityFilter [http-nio-8082-exec-7] null
2021-08-09 12:03:26,401 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.0.Final
2021-08-09 12:03:26,401 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting AvtcApplication using Java 11.0.10 on DESKTOP-BIBH7GP with PID 1504 (C:\Users\sonna\IdeaProjects\avtc\target\classes started by sonna in C:\Users\sonna\IdeaProjects\avtc)
2021-08-09 12:03:26,407 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.5.0, Spring v5.3.7
2021-08-09 12:03:26,408 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2021-08-09 12:03:26,489 INFO org.springframework.boot.logging.DeferredLog [restartedMain] The Class-Path manifest attribute in C:\Users\sonna\.m2\repository\org\glassfish\hk2\hk2\2.6.1\hk2-2.6.1.jar referenced one or more files that do not exist: file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/hk2-utils.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/jakarta.annotation-api.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/jakarta.inject.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/hk2-api.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/aopalliance-repackaged.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/hk2-core.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/hk2-locator.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/javassist.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/hk2-runlevel.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/class-model.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/asm.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/asm-analysis.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/asm-commons.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/asm-tree.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/asm-util.jar
2021-08-09 12:03:26,489 INFO org.springframework.boot.logging.DeferredLog [restartedMain] The Class-Path manifest attribute in C:\Users\sonna\.m2\repository\io\grpc\grpc-netty-shaded\1.23.0\grpc-netty-shaded-1.23.0.jar referenced one or more files that do not exist: file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/grpc-core-1.23.0.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/grpc-api-1.23.0.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/gson-2.7.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/annotations-4.1.1.4.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/perfmark-api-0.17.0.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/opencensus-contrib-grpc-metrics-0.21.0.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/opencensus-api-0.21.0.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/grpc-context-1.23.0.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/error_prone_annotations-2.3.2.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/jsr305-3.0.2.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/animal-sniffer-annotations-1.17.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/guava-26.0-android.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/checker-compat-qual-2.5.2.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/j2objc-annotations-1.1.jar
2021-08-09 12:03:26,490 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-08-09 12:03:26,491 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-08-09 12:03:26,962 WARN org.springframework.core.log.CompositeLog [background-preinit] For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath
2021-08-09 12:03:28,091 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-08-09 12:03:28,370 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 261 ms. Found 12 JPA repository interfaces.
2021-08-09 12:03:29,140 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7bb3643b' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-09 12:03:29,156 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-09 12:03:29,843 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8082 (http)
2021-08-09 12:03:29,860 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8082"]
2021-08-09 12:03:29,861 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2021-08-09 12:03:29,862 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.46]
2021-08-09 12:03:30,122 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2021-08-09 12:03:30,123 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 3630 ms
2021-08-09 12:03:30,530 DEBUG org.springframework.web.filter.GenericFilterBean [restartedMain] Filter 'securityFilter' configured for use
2021-08-09 12:03:30,861 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2021-08-09 12:03:30,993 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate Core {5.2.17.Final}
2021-08-09 12:03:30,997 INFO org.hibernate.cfg.Environment [restartedMain] HHH000206: hibernate.properties not found
2021-08-09 12:03:31,079 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [restartedMain] HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2021-08-09 12:03:31,360 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2021-08-09 12:03:31,926 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2021-08-09 12:03:31,949 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2021-08-09 12:03:33,591 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-08-09 12:03:34,908 INFO org.hibernate.hql.internal.QueryTranslatorFactoryInitiator [restartedMain] HHH000397: Using ASTQueryTranslatorFactory
2021-08-09 12:03:35,858 INFO org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration [restartedMain] 

Using generated security password: da56a65b-d059-49f1-87e5-7c187d9f645f

2021-08-09 12:03:36,308 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@49b2d7a7, org.springframework.security.web.context.SecurityContextPersistenceFilter@73f614f6, org.springframework.security.web.header.HeaderWriterFilter@2ad86c85, org.springframework.web.filter.CorsFilter@24687099, org.springframework.security.web.authentication.logout.LogoutFilter@172b94b6, org.heartfulness.avtc.security.auth.SecurityFilter@2be6dd6a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2b9a2d46, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5fb11957, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@369647f5, org.springframework.security.web.session.SessionManagementFilter@1e0c9fa6, org.springframework.security.web.access.ExceptionTranslationFilter@7aa46711, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@9563443]
2021-08-09 12:03:39,130 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2021-08-09 12:03:39,185 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8082"]
2021-08-09 12:03:39,228 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8082 (http) with context path ''
2021-08-09 12:03:39,254 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started AvtcApplication in 13.517 seconds (JVM running for 17.13)
2021-08-09 12:03:39,258 INFO org.springframework.boot.availability.ApplicationAvailabilityBean [restartedMain] Application availability state LivenessState changed to CORRECT
2021-08-09 12:03:39,265 INFO org.springframework.boot.availability.ApplicationAvailabilityBean [restartedMain] Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2021-08-09 12:03:45,501 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8082-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-08-09 12:03:45,502 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8082-exec-2] Initializing Servlet 'dispatcherServlet'
2021-08-09 12:03:45,504 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8082-exec-2] Completed initialization in 2 ms
2021-08-09 12:03:45,546 INFO org.heartfulness.avtc.security.auth.SecurityFilter [http-nio-8082-exec-2] null
2021-08-09 12:03:49,284 INFO org.heartfulness.avtc.security.auth.SecurityFilter [http-nio-8082-exec-3] null
2021-08-09 12:03:49,423 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8082-exec-3] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2] with root cause
javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:123)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:157)
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1471)
	at org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getSingleResult(CriteriaQueryTypeQueryAdapter.java:107)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:196)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:155)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:143)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:159)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy130.findByUid(Unknown Source)
	at org.heartfulness.avtc.service.CallServiceImpl.findByUid(CallServiceImpl.java:66)
	at org.heartfulness.avtc.service.InputNodeService.input(InputNodeService.java:59)
	at org.heartfulness.avtc.controller.NodeController.inputNodeRequest(NodeController.java:41)
	at org.heartfulness.avtc.controller.NodeController$$FastClassBySpringCGLIB$$7244677c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at org.heartfulness.avtc.controller.NodeController$$EnhancerBySpringCGLIB$$435af40c.inputNodeRequest(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.heartfulness.avtc.security.auth.SecurityFilter.doFilterInternal(SecurityFilter.java:58)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-08-09 12:04:32,348 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting AvtcApplication using Java 11.0.10 on DESKTOP-BIBH7GP with PID 1468 (C:\Users\sonna\IdeaProjects\avtc\target\classes started by sonna in C:\Users\sonna\IdeaProjects\avtc)
2021-08-09 12:04:32,348 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.0.Final
2021-08-09 12:04:32,355 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.5.0, Spring v5.3.7
2021-08-09 12:04:32,356 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2021-08-09 12:04:32,441 INFO org.springframework.boot.logging.DeferredLog [restartedMain] The Class-Path manifest attribute in C:\Users\sonna\.m2\repository\org\glassfish\hk2\hk2\2.6.1\hk2-2.6.1.jar referenced one or more files that do not exist: file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/hk2-utils.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/jakarta.annotation-api.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/jakarta.inject.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/hk2-api.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/aopalliance-repackaged.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/hk2-core.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/hk2-locator.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/javassist.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/hk2-runlevel.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/class-model.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/asm.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/asm-analysis.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/asm-commons.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/asm-tree.jar,file:/C:/Users/sonna/.m2/repository/org/glassfish/hk2/hk2/2.6.1/asm-util.jar
2021-08-09 12:04:32,442 INFO org.springframework.boot.logging.DeferredLog [restartedMain] The Class-Path manifest attribute in C:\Users\sonna\.m2\repository\io\grpc\grpc-netty-shaded\1.23.0\grpc-netty-shaded-1.23.0.jar referenced one or more files that do not exist: file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/grpc-core-1.23.0.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/grpc-api-1.23.0.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/gson-2.7.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/annotations-4.1.1.4.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/perfmark-api-0.17.0.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/opencensus-contrib-grpc-metrics-0.21.0.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/opencensus-api-0.21.0.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/grpc-context-1.23.0.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/error_prone_annotations-2.3.2.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/jsr305-3.0.2.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/animal-sniffer-annotations-1.17.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/guava-26.0-android.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/checker-compat-qual-2.5.2.jar,file:/C:/Users/sonna/.m2/repository/io/grpc/grpc-netty-shaded/1.23.0/j2objc-annotations-1.1.jar
2021-08-09 12:04:32,443 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-08-09 12:04:32,443 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-08-09 12:04:32,916 WARN org.springframework.core.log.CompositeLog [background-preinit] For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath
2021-08-09 12:04:34,100 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-08-09 12:04:34,434 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 317 ms. Found 12 JPA repository interfaces.
2021-08-09 12:04:35,284 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@11ee9249' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-09 12:04:35,305 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-09 12:04:36,046 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8082 (http)
2021-08-09 12:04:36,064 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8082"]
2021-08-09 12:04:36,065 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2021-08-09 12:04:36,066 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.46]
2021-08-09 12:04:36,361 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2021-08-09 12:04:36,362 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 3917 ms
2021-08-09 12:04:36,845 DEBUG org.springframework.web.filter.GenericFilterBean [restartedMain] Filter 'securityFilter' configured for use
2021-08-09 12:04:37,239 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2021-08-09 12:04:37,393 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate Core {5.2.17.Final}
2021-08-09 12:04:37,397 INFO org.hibernate.cfg.Environment [restartedMain] HHH000206: hibernate.properties not found
2021-08-09 12:04:37,497 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [restartedMain] HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2021-08-09 12:04:37,811 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2021-08-09 12:04:38,503 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2021-08-09 12:04:38,528 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2021-08-09 12:04:40,363 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-08-09 12:04:42,002 INFO org.hibernate.hql.internal.QueryTranslatorFactoryInitiator [restartedMain] HHH000397: Using ASTQueryTranslatorFactory
2021-08-09 12:04:43,322 INFO org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration [restartedMain] 

Using generated security password: 2995fcfa-559d-4b57-8592-80e65fd1e7fc

2021-08-09 12:04:43,840 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1b7bea30, org.springframework.security.web.context.SecurityContextPersistenceFilter@20a9dc41, org.springframework.security.web.header.HeaderWriterFilter@4de626cc, org.springframework.web.filter.CorsFilter@5d21dd16, org.springframework.security.web.authentication.logout.LogoutFilter@5bda9fd5, org.heartfulness.avtc.security.auth.SecurityFilter@1f91eefd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2ebbd7f1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@20e2f452, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6c82881a, org.springframework.security.web.session.SessionManagementFilter@7c06a3f7, org.springframework.security.web.access.ExceptionTranslationFilter@17b0a00a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@293d16dc]
2021-08-09 12:04:46,953 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2021-08-09 12:04:47,011 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8082"]
2021-08-09 12:04:47,053 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8082 (http) with context path ''
2021-08-09 12:04:47,078 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started AvtcApplication in 15.463 seconds (JVM running for 19.044)
2021-08-09 12:04:47,082 INFO org.springframework.boot.availability.ApplicationAvailabilityBean [restartedMain] Application availability state LivenessState changed to CORRECT
2021-08-09 12:04:47,091 INFO org.springframework.boot.availability.ApplicationAvailabilityBean [restartedMain] Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2021-08-09 12:04:59,869 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8082-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-08-09 12:04:59,870 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8082-exec-1] Initializing Servlet 'dispatcherServlet'
2021-08-09 12:04:59,872 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8082-exec-1] Completed initialization in 2 ms
2021-08-09 12:04:59,907 INFO org.heartfulness.avtc.security.auth.SecurityFilter [http-nio-8082-exec-1] null
2021-08-09 12:05:00,232 INFO org.heartfulness.avtc.controller.NodeController [http-nio-8082-exec-1] Time taken by inputNode: 194
2021-08-09 12:20:38,712 INFO org.heartfulness.avtc.security.auth.SecurityFilter [http-nio-8082-exec-5] null
2021-08-09 12:20:38,733 INFO org.heartfulness.avtc.controller.NodeController [http-nio-8082-exec-5] Time taken by inputNode: 17
2021-08-09 12:20:54,978 INFO org.heartfulness.avtc.security.auth.SecurityFilter [http-nio-8082-exec-6] null
2021-08-09 12:20:55,003 INFO org.heartfulness.avtc.controller.NodeController [http-nio-8082-exec-6] Time taken by inputNode: 21
2021-08-09 12:20:56,973 INFO org.heartfulness.avtc.security.auth.SecurityFilter [http-nio-8082-exec-7] null
2021-08-09 12:20:56,987 INFO org.heartfulness.avtc.controller.NodeController [http-nio-8082-exec-7] Time taken by inputNode: 12
2021-08-09 12:21:01,108 INFO org.heartfulness.avtc.security.auth.SecurityFilter [http-nio-8082-exec-8] null
2021-08-09 12:21:01,123 INFO org.heartfulness.avtc.controller.NodeController [http-nio-8082-exec-8] Time taken by inputNode: 13
2021-08-09 12:21:36,679 INFO org.springframework.boot.availability.ApplicationAvailabilityBean [Thread-6] Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
2021-08-09 12:21:37,159 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-6] Closing JPA EntityManagerFactory for persistence unit 'default'
2021-08-09 12:21:37,164 INFO com.zaxxer.hikari.HikariDataSource [Thread-6] HikariPool-1 - Shutdown initiated...
2021-08-09 12:21:37,192 INFO com.zaxxer.hikari.HikariDataSource [Thread-6] HikariPool-1 - Shutdown completed.
2021-08-09 12:21:37,409 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting AvtcApplication using Java 11.0.10 on DESKTOP-BIBH7GP with PID 1468 (C:\Users\sonna\IdeaProjects\avtc\target\classes started by sonna in C:\Users\sonna\IdeaProjects\avtc)
2021-08-09 12:21:37,410 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.5.0, Spring v5.3.7
2021-08-09 12:21:37,410 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2021-08-09 12:21:38,261 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-08-09 12:21:38,469 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 206 ms. Found 12 JPA repository interfaces.
2021-08-09 12:21:38,724 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@388929fe' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-09 12:21:38,728 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-09 12:21:38,907 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8082 (http)
2021-08-09 12:21:38,909 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8082"]
2021-08-09 12:21:38,910 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2021-08-09 12:21:38,910 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.46]
2021-08-09 12:21:39,041 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2021-08-09 12:21:39,042 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1626 ms
2021-08-09 12:21:39,174 DEBUG org.springframework.web.filter.GenericFilterBean [restartedMain] Filter 'securityFilter' configured for use
2021-08-09 12:21:39,295 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2021-08-09 12:21:39,388 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-2 - Starting...
2021-08-09 12:21:39,447 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-2 - Start completed.
2021-08-09 12:21:39,448 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2021-08-09 12:21:41,580 INFO org.hibernate.tool.schema.internal.SchemaCreatorImpl [restartedMain] HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@1cce827f'
2021-08-09 12:21:41,581 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-08-09 12:21:42,586 INFO org.hibernate.hql.internal.QueryTranslatorFactoryInitiator [restartedMain] HHH000397: Using ASTQueryTranslatorFactory
2021-08-09 12:21:43,178 INFO org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration [restartedMain] 

Using generated security password: 399499ee-b648-4fc2-bbef-67eded0f73ea

2021-08-09 12:21:43,282 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1e60b126, org.springframework.security.web.context.SecurityContextPersistenceFilter@4d1dab2, org.springframework.security.web.header.HeaderWriterFilter@174d003d, org.springframework.web.filter.CorsFilter@260dbf93, org.springframework.security.web.authentication.logout.LogoutFilter@5a524ef5, org.heartfulness.avtc.security.auth.SecurityFilter@74491ab5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3c0f2d73, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@43bc9e27, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@327bed61, org.springframework.security.web.session.SessionManagementFilter@66ceb7a9, org.springframework.security.web.access.ExceptionTranslationFilter@5e6cd15a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6de5d26b]
2021-08-09 12:21:44,265 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2021-08-09 12:21:44,297 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8082"]
2021-08-09 12:21:44,306 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8082 (http) with context path ''
2021-08-09 12:21:44,323 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started AvtcApplication in 7.006 seconds (JVM running for 1036.29)
2021-08-09 12:21:44,325 INFO org.springframework.boot.availability.ApplicationAvailabilityBean [restartedMain] Application availability state LivenessState changed to CORRECT
2021-08-09 12:21:44,333 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2021-08-09 12:21:44,334 INFO org.springframework.boot.availability.ApplicationAvailabilityBean [restartedMain] Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2021-08-09 12:21:47,021 INFO org.springframework.boot.availability.ApplicationAvailabilityBean [Thread-9] Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
2021-08-09 12:21:47,508 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-9] Closing JPA EntityManagerFactory for persistence unit 'default'
2021-08-09 12:21:47,510 INFO com.zaxxer.hikari.HikariDataSource [Thread-9] HikariPool-2 - Shutdown initiated...
2021-08-09 12:21:47,528 INFO com.zaxxer.hikari.HikariDataSource [Thread-9] HikariPool-2 - Shutdown completed.
2021-08-09 12:21:47,756 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting AvtcApplication using Java 11.0.10 on DESKTOP-BIBH7GP with PID 1468 (C:\Users\sonna\IdeaProjects\avtc\target\classes started by sonna in C:\Users\sonna\IdeaProjects\avtc)
2021-08-09 12:21:47,757 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.5.0, Spring v5.3.7
2021-08-09 12:21:47,758 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2021-08-09 12:21:48,498 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-08-09 12:21:48,690 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 191 ms. Found 12 JPA repository interfaces.
2021-08-09 12:21:48,874 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@30cd2b4f' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-09 12:21:48,878 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-09 12:21:49,031 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8082 (http)
2021-08-09 12:21:49,033 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8082"]
2021-08-09 12:21:49,033 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2021-08-09 12:21:49,034 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.46]
2021-08-09 12:21:49,125 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2021-08-09 12:21:49,125 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1357 ms
2021-08-09 12:21:49,262 DEBUG org.springframework.web.filter.GenericFilterBean [restartedMain] Filter 'securityFilter' configured for use
2021-08-09 12:21:49,404 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2021-08-09 12:21:49,483 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-3 - Starting...
2021-08-09 12:21:49,549 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-3 - Start completed.
2021-08-09 12:21:49,550 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2021-08-09 12:21:51,413 INFO org.hibernate.tool.schema.internal.SchemaCreatorImpl [restartedMain] HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@1cce827f'
2021-08-09 12:21:51,414 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-08-09 12:21:52,233 INFO org.hibernate.hql.internal.QueryTranslatorFactoryInitiator [restartedMain] HHH000397: Using ASTQueryTranslatorFactory
2021-08-09 12:21:52,553 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [org.heartfulness.avtc.AvtcApplicationTests], using SpringBootContextLoader
2021-08-09 12:21:52,578 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [org.heartfulness.avtc.AvtcApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2021-08-09 12:21:52,581 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [org.heartfulness.avtc.AvtcApplicationTests]: AvtcApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2021-08-09 12:21:52,764 INFO org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration [restartedMain] 

Using generated security password: f54a9743-68c1-49fb-90dd-925c8a9a8a78

2021-08-09 12:21:52,893 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4e6783e5, org.springframework.security.web.context.SecurityContextPersistenceFilter@298eb33b, org.springframework.security.web.header.HeaderWriterFilter@6ce14876, org.springframework.web.filter.CorsFilter@4a1b6d76, org.springframework.security.web.authentication.logout.LogoutFilter@71966204, org.heartfulness.avtc.security.auth.SecurityFilter@7590a9dd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@b8a26a5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6dce7d5a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@22125de0, org.springframework.security.web.session.SessionManagementFilter@749688a4, org.springframework.security.web.access.ExceptionTranslationFilter@11d67e19, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@311b582e]
2021-08-09 12:21:52,997 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration org.heartfulness.avtc.AvtcApplication for test class org.heartfulness.avtc.AvtcApplicationTests
2021-08-09 12:21:53,282 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener]
2021-08-09 12:21:53,345 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@78461bc4, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@544630b7, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@64f857e7, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1095f122, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@58c540cf, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3d6300e8, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1b822fcc, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@24a1c17f, org.springframework.test.context.event.EventPublishingTestExecutionListener@56102e1c, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@73511076, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@7927bd9f, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@532721fd, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@410954b, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7fb9f71f, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3b366632, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@51f49060, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@514eedd8]
2021-08-09 12:21:53,921 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2021-08-09 12:21:53,957 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8082"]
2021-08-09 12:21:53,965 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8082 (http) with context path ''
2021-08-09 12:21:53,976 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started AvtcApplication in 6.321 seconds (JVM running for 1045.943)
2021-08-09 12:21:53,979 INFO org.springframework.boot.availability.ApplicationAvailabilityBean [restartedMain] Application availability state LivenessState changed to CORRECT
2021-08-09 12:21:53,983 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2021-08-09 12:21:53,983 INFO org.springframework.boot.availability.ApplicationAvailabilityBean [restartedMain] Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2021-08-09 12:21:54,282 INFO org.springframework.boot.StartupInfoLogger [main] Starting AvtcApplicationTests using Java 11.0.10 on DESKTOP-BIBH7GP with PID 14064 (started by sonna in C:\Users\sonna\IdeaProjects\avtc)
2021-08-09 12:21:54,284 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.5.0, Spring v5.3.7
2021-08-09 12:21:54,294 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2021-08-09 12:21:54,311 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.0.Final
2021-08-09 12:21:55,563 WARN org.springframework.core.log.CompositeLog [background-preinit] For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath
2021-08-09 12:21:56,573 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-08-09 12:21:56,868 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 276 ms. Found 12 JPA repository interfaces.
2021-08-09 12:21:58,247 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1f7cec93' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-09 12:21:58,321 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-09 12:21:58,913 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2021-08-09 12:21:59,142 INFO org.hibernate.Version [main] HHH000412: Hibernate Core {5.2.17.Final}
2021-08-09 12:21:59,148 INFO org.hibernate.cfg.Environment [main] HHH000206: hibernate.properties not found
2021-08-09 12:21:59,256 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2021-08-09 12:21:59,518 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2021-08-09 12:22:00,973 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2021-08-09 12:22:01,017 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2021-08-09 12:22:04,676 INFO org.hibernate.tool.schema.internal.SchemaCreatorImpl [main] HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@344a065a'
2021-08-09 12:22:04,683 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-08-09 12:22:06,748 INFO org.hibernate.hql.internal.QueryTranslatorFactoryInitiator [main] HHH000397: Using ASTQueryTranslatorFactory
2021-08-09 12:22:08,229 INFO org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration [main] 

Using generated security password: bf95575d-3d77-4ee9-88fc-550b2a89452e

2021-08-09 12:22:08,774 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@51ac72f7, org.springframework.security.web.context.SecurityContextPersistenceFilter@261b27db, org.springframework.security.web.header.HeaderWriterFilter@4fce655d, org.springframework.web.filter.CorsFilter@15324f25, org.springframework.security.web.authentication.logout.LogoutFilter@756030e2, org.heartfulness.avtc.security.auth.SecurityFilter@63218586, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@60e5db1d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@32029cd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7b9f7087, org.springframework.security.web.session.SessionManagementFilter@1aba8978, org.springframework.security.web.access.ExceptionTranslationFilter@69efdfd9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@21b3d356]
2021-08-09 12:22:12,342 INFO org.springframework.boot.StartupInfoLogger [main] Started AvtcApplicationTests in 18.872 seconds (JVM running for 21.954)
2021-08-09 12:22:12,345 INFO org.springframework.boot.availability.ApplicationAvailabilityBean [main] Application availability state LivenessState changed to CORRECT
2021-08-09 12:22:12,354 INFO org.springframework.boot.availability.ApplicationAvailabilityBean [main] Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2021-08-09 12:38:04,286 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8082-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-08-09 12:38:04,288 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8082-exec-2] Initializing Servlet 'dispatcherServlet'
2021-08-09 12:38:04,292 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8082-exec-2] Completed initialization in 4 ms
2021-08-09 12:38:04,295 INFO org.heartfulness.avtc.security.auth.SecurityFilter [http-nio-8082-exec-2] null
2021-08-09 12:38:04,383 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8082-exec-2] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at org.heartfulness.avtc.service.InputNodeService.input(InputNodeService.java:60)
	at org.heartfulness.avtc.controller.NodeController.inputNodeRequest(NodeController.java:41)
	at org.heartfulness.avtc.controller.NodeController$$FastClassBySpringCGLIB$$7244677c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at org.heartfulness.avtc.controller.NodeController$$EnhancerBySpringCGLIB$$3d29f167.inputNodeRequest(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.heartfulness.avtc.security.auth.SecurityFilter.doFilterInternal(SecurityFilter.java:58)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-08-09 13:32:27,161 WARN com.zaxxer.hikari.pool.HikariPool$HouseKeeper [HikariPool-3 housekeeper] HikariPool-3 - Thread starvation or clock leap detected (housekeeper delta=36m37s5ms476µs900ns).
